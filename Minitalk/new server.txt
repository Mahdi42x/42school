#include <unistd.h> // F端r getpid()
#include <signal.h> // F端r sigaction(), SIGUSR1 und SIGUSR2
#include <stdio.h>  // F端r printf()
#include <stdlib.h> // F端r EXIT_SUCCESS

void	print_message(int signum,  void *ucontent)
{
	static int		bit_index = 0;
	static unsigned char	received_char = 0;

	(void)ucontent;
	if (signum == SIGUSR1)
		received_char |= (1 << bit_index);
	else if (signum == SIGUSR2)
		received_char |= (0 << bit_index);
	bit_index++;
	if (bit_index == 8)
	{
		if (received_char == 0)
			write(1, "\n", 1);
		ft_putchar_fd(received_char, 1);
		bit_index = 0;
		received_char = 0;
	}
}

void	config_signals(void)
{
	struct sigaction	action;

	action.sa_sigaction = &print_message;
	action.sa_flags = SA_SIGINFO;
	if (sigaction(SIGUSR1, &action, NULL) == -1)
		return ;
	if (sigaction(SIGUSR2, &action, NULL) == -1)
		return ;
}

int	main(void)
{
	ft_printf("PID of server: %d\n", getpid());
	while (1)
		config_signals();
	return (EXIT_SUCCESS);
}
